buildscript {
	ext {
		rootGradleDir = "${rootProject.rootDir}/gradle"
	}
}

plugins {
	id "com.github.spotbugs" version "4.7.0"
}

apply plugin:'java'
apply plugin:'groovy'
apply plugin:'idea'
apply plugin:'application'
apply plugin:'maven-publish'
apply plugin:'signing'
apply plugin:'com.github.spotbugs'

group = "com.github.hschneid"
archivesBaseName = "xfvrp"
version = "11.4.2-RELEASE"
sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

repositories {
	mavenCentral()
}

mainClassName = 'util.Application'

// In this section you declare the dependencies for your production and test code
dependencies {
	implementation 'org.apache.commons:commons-compress:1.20'

	implementation 'colt:colt:1.2.0'

	// Necessary for ORG-VRP INSTANCES
	implementation 'org.vrp-rep:vrprep-model:0.5.0'
	implementation 'com.sun.xml.bind:jaxb-impl:2.3.2'
	implementation 'com.sun.xml.bind:jaxb-core:2.3.0.1'
	implementation 'javax.activation:activation:1.1'

	testImplementation 'org.spockframework:spock-core:2.0-M4-groovy-3.0'
	testImplementation 'com.fasterxml.jackson.core:jackson-databind:2.11.1'

	spotbugsPlugins 'com.h3xstream.findsecbugs:findsecbugs-plugin:1.11.0'
	spotbugsPlugins 'com.mebigfatguy.fb-contrib:fb-contrib:7.4.7'
}

// Maven - Publish
task javadocJar(type: Jar) {
	archiveClassifier.set('javadoc')
	from javadoc
}

task sourcesJar(type: Jar) {
	archiveClassifier.set("sources")
	from sourceSets.main.allSource
}

task mainJar(type: Jar) {
	with jar
}

publishing {
	publications {
		maven(MavenPublication) {
			artifact mainJar
			artifact sourcesJar
			artifact javadocJar

			pom {
				name = 'XFVRP'
				packaging 'jar'
				// optionally artifactId can be defined here
				description = 'Solver for realistic vehicle routing problems'
				url = 'https://github.com/hschneid/xfvrp'

				scm {
					connection = 'scm:git:git://github.com/hschneid/xfvrp.git'
					developerConnection = 'scm:git:ssh://github.com/hschneid/xfvrp.git'
					url = 'https://github.com/hschneid/xfvrp'
				}

				licenses {
					license {
						name = 'MIT License'
						url = 'http://www.opensource.org/licenses/mit-license.php'
					}
				}

				developers {
					developer {
						id = 'hschneid'
						name = 'Holger Schneider'
						email = 'holger.schneider.81@gmail.com'
					}
				}
			}

		}
	}
	repositories {
		maven {
			credentials {
				username ossrhUsername
				password ossrhPassword
			}
			if (project.version.endsWith("-SNAPSHOT")) {
				url "https://oss.sonatype.org/content/repositories/snapshots/"
			} else {
				url "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
			}
		}
	}
}

signing {
	sign publishing.publications.maven
}

spotbugsMain.onlyIf { t -> !t.name.equals("build") }
spotbugsTest.onlyIf { false }

// Example to configure HTML report
spotbugsMain {
	ignoreFailures = true
	reports {
		html {
			enabled = true
			destination = file("$buildDir/reports/spotbugs/main/spotbugs.html")
			stylesheet = 'fancy-hist.xsl'
		}
	}
}

spotbugsTest {
	reports {
		html {
			enabled = true
			destination = file("$buildDir/reports/spotbugs/test/spotbugs.html")
			stylesheet = 'fancy-hist.xsl'
		}
	}
}
